@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|-- BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        --
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Comparable <|-- LexakaiProject.JavadocCoverage
    class LexakaiProject.JavadocCoverage
    {
        --
        +String detailed()
        +LexakaiProject project()
        --(collection)--
        +StringList asStringList()
        +StringList description()
        +StringList significantUndocumentedClasses()
        +StringList undocumentedClasses()
        --(distance)--
        +String meterMarkdown()
        --(math)--
        +Percent percent()
    }
    
    Application <|-- Lexakai
    class Lexakai
    {
        --(constructors)--
        #Lexakai()
        --
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
    }
    
    BaseLexakaiDiagram <|-- LexakaiClassDiagram
    Named <|-- LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        --(constructors)--
        +LexakaiClassDiagram(LexakaiProject, String)
        --
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        --(checks)--
        +boolean isPackageDiagram()
        --(collection)--
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        --(filtering)--
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        --(identity)--
        +String identifier()
        --(naming)--
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|-- LexakaiProject
    Comparable <|-- LexakaiProject
    LexakaiProject --> LexakaiProject : "creates"
    class LexakaiProject
    {
        --(constructors)--
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        --
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        --(building)--
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        --(checks)--
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        --(collection)--
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> javadocCoverage()
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        --(filesystem)--
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadMeTemplateFile()
        +File readMeTemplateFile()
        +File readmeFile()
        +Folder relativeFolder()
        +Folder sourceFolder()
        --(filtering)--
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        --(identity)--
        +Version version()
        --(lifecycle)--
        +void initialize()
        --(math)--
        +Percent averageCoverage()
        +String meterMarkdownForPercent(Percent)
        --(naming)--
        +String name()
        --(read)--
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        --(constructors)--
        +Referent(String, Type)
        --
        +String cardinality()
        +Type referent()
    }
    
@enduml

