<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1986.4583px" preserveAspectRatio="none" style="width:1777px;height:1986px;background:#333333;" version="1.1" viewBox="0 0 1777 1986" width="1777.0833px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="220.8333" x="771.0938" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="197.9167" x="782.5521" y="30.5583">com.telenav.lexakai</text><!--MD5=[9f629a7fa9860d04f332207d261c63eb]
cluster LexakaiProject--><polygon fill="#333333" points="965.625,601.0986,1070.8333,601.0986,1078.125,628.3203,1318.75,628.3203,1318.75,953.182,965.625,953.182,965.625,601.0986" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="965.625" x2="1078.125" y1="628.3203" y2="628.3203"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="972.9167" y="618.3919">LexakaiProject</text><!--MD5=[d1d1410ec48872eaba86b31c90435c19]
class LexakaiProject.JavadocCoverage--><rect codeLine="21" fill="#282828" height="277.7486" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1010.4167" y="650.057"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1010.4167" y="650.057"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1010.4167" y="673.112"/><rect codeLine="21" fill="none" height="277.7486" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1010.4167" y="650.057"/><ellipse cx="1089.5833" cy="665.7511" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1091.4937,670.1762 Q1091.0665,670.3959 1090.5965,670.5058 Q1090.1265,670.6156 1089.6077,670.6156 Q1087.7645,670.6156 1086.794,669.401 Q1085.8236,668.1864 1085.8236,665.8915 Q1085.8236,663.5905 1086.794,662.3759 Q1087.7645,661.1613 1089.6077,661.1613 Q1090.1265,661.1613 1090.6026,661.2712 Q1091.0787,661.381 1091.4937,661.6007 L1091.4937,663.6027 Q1091.0299,663.1755 1090.5935,662.9771 Q1090.1571,662.7787 1089.6932,662.7787 Q1088.7044,662.7787 1088.2009,663.563 Q1087.6973,664.3473 1087.6973,665.8915 Q1087.6973,667.4296 1088.2009,668.2139 Q1088.7044,668.9982 1089.6932,668.9982 Q1090.1571,668.9982 1090.5935,668.7998 Q1091.0299,668.6015 1091.4937,668.1742 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="110.4167" x="1112.5" y="670.4753">JavadocCoverage</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1011.4583" x2="1292.7083" y1="681.4453" y2="681.4453"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1292.7083" y1="689.7786" y2="689.7786"/><ellipse cx="1021.875" cy="701.237" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="88.5417" x="1033.3333" y="708.1482">String detailed()</text><ellipse cx="1021.875" cy="720.9819" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="1033.3333" y="727.8931">LexakaiProject project()</text><ellipse cx="1021.875" cy="764.6383" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="130.2083" x="1033.3333" y="771.5495">StringList asStringList()</text><ellipse cx="1021.875" cy="784.3831" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1033.3333" y="791.2944">StringList description()</text><ellipse cx="1021.875" cy="804.128" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="1033.3333" y="811.0392">StringList significantUndocumentedClasses()</text><ellipse cx="1021.875" cy="823.8729" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="191.6667" x="1033.3333" y="830.7841">StringList undocumentedClasses()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1117.7083" y1="747.4742" y2="747.4742"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1120.8333" y="751.2838">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1186.4583" x2="1292.7083" y1="747.4742" y2="747.4742"/><ellipse cx="1021.875" cy="867.5293" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1033.3333" y="874.4405">String meterMarkdown()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1121.3542" y1="850.3652" y2="850.3652"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="1124.4792" y="854.1748">(distance)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1182.8125" x2="1292.7083" y1="850.3652" y2="850.3652"/><ellipse cx="1021.875" cy="911.1857" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1033.3333" y="918.0969">Percent percent()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1130.7292" y1="894.0216" y2="894.0216"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1133.8542" y="897.8312">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1173.4375" x2="1292.7083" y1="894.0216" y2="894.0216"/><!--MD5=[762aa3d0df6a9d47bd8e105afbd066b5]
class BaseRepeater--><rect codeLine="6" fill="#282828" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="331.7708" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="331.7708" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="331.7708" y="118.4245"/><rect codeLine="6" fill="none" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="331.7708" y="95.3695"/><ellipse cx="346.3542" cy="111.0636" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M346.4681,107.7657 L345.6197,111.495 L347.3226,111.495 Z M345.3695,106.1178 L347.5728,106.1178 L350.0326,115.2303 L348.232,115.2303 L347.6705,112.9781 L345.2596,112.9781 L344.7103,115.2303 L342.9097,115.2303 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="363.0208" y="115.7878">BaseRepeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.8125" x2="454.6875" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="332.8125" x2="454.6875" y1="135.0911" y2="135.0911"/><!--MD5=[d366ac531d94add6ab38903d6804b189]
class BaseLexakaiDiagram--><rect codeLine="13" fill="#282828" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="745.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="745.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="768.4245"/><rect codeLine="13" fill="none" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="745.3695"/><ellipse cx="49.7396" cy="761.0636" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M49.8535,757.7657 L49.0051,761.495 L50.708,761.495 Z M48.7549,756.1178 L50.9583,756.1178 L53.418,765.2303 L51.6174,765.2303 L51.0559,762.9781 L48.645,762.9781 L48.0957,765.2303 L46.2952,765.2303 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="134.375" x="72.1354" y="765.7878">BaseLexakaiDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="237.5" y1="776.7578" y2="776.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="237.5" y1="785.0911" y2="785.0911"/><ellipse cx="20.8333" cy="796.5495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="32.2917" y="803.4607">String uml(String title)</text><polygon fill="#FFFF44" points="20.8333,811.086,25,815.2527,20.8333,819.4194,16.6667,815.2527" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="32.2917" y="823.2056">void onUml(IndentingStringBuilder)</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="9" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="765.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="765.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="788.2161"/><rect codeLine="9" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="765.1611"/><ellipse cx="869.2708" cy="780.8553" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M866.154,778.0172 L866.154,776.4303 L871.58,776.4303 L871.58,778.0172 L869.7673,778.0172 L869.7673,783.9559 L871.58,783.9559 L871.58,785.5428 L866.154,785.5428 L866.154,783.9559 L867.9667,783.9559 L867.9667,778.0172 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="885.9375" y="785.5794">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="855.7292" x2="935.9375" y1="796.5495" y2="796.5495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="855.7292" x2="935.9375" y1="804.8828" y2="804.8828"/><!--MD5=[7a4729d26b999f6a4650b01106c103c5]
class Comparable--><rect codeLine="10" fill="#282828" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="547.3958" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="547.3958" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="547.3958" y="118.4245"/><rect codeLine="10" fill="none" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="547.3958" y="95.3695"/><ellipse cx="561.9792" cy="111.0636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M558.8623,108.2255 L558.8623,106.6386 L564.2883,106.6386 L564.2883,108.2255 L562.4756,108.2255 L562.4756,114.1642 L564.2883,114.1642 L564.2883,115.7511 L558.8623,115.7511 L558.8623,114.1642 L560.675,114.1642 L560.675,108.2255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="578.6458" y="115.7878">Comparable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="548.4375" x2="661.9792" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="548.4375" x2="661.9792" y1="135.0911" y2="135.0911"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#282828" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1388.0208" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1388.0208" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1388.0208" y="118.4245"/><rect fill="none" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1388.0208" y="95.3695"/><ellipse cx="1402.6042" cy="111.0636" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1404.5146,115.4887 Q1404.0873,115.7084 1403.6174,115.8183 Q1403.1474,115.9281 1402.6286,115.9281 Q1400.7853,115.9281 1399.8149,114.7135 Q1398.8444,113.4989 1398.8444,111.204 Q1398.8444,108.903 1399.8149,107.6884 Q1400.7853,106.4738 1402.6286,106.4738 Q1403.1474,106.4738 1403.6235,106.5837 Q1404.0995,106.6935 1404.5146,106.9132 L1404.5146,108.9152 Q1404.0507,108.488 1403.6143,108.2896 Q1403.1779,108.0912 1402.714,108.0912 Q1401.7253,108.0912 1401.2217,108.8755 Q1400.7182,109.6598 1400.7182,111.204 Q1400.7182,112.7421 1401.2217,113.5264 Q1401.7253,114.3107 1402.714,114.3107 Q1403.1779,114.3107 1403.6143,114.1123 Q1404.0507,113.914 1404.5146,113.4867 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1419.2708" y="115.7878">Application</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1389.0625" x2="1498.4375" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1389.0625" x2="1498.4375" y1="135.0911" y2="135.0911"/><!--MD5=[71ba3f8efe45f4767ee229c95530b131]
class Lexakai--><rect codeLine="38" fill="#282828" height="131.2012" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="1343.75" y="723.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="1343.75" y="723.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="1343.75" y="746.5495"/><rect codeLine="38" fill="none" height="131.2012" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="1343.75" y="723.4945"/><ellipse cx="1411.9792" cy="739.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1413.8896,743.6137 Q1413.4623,743.8334 1412.9924,743.9433 Q1412.5224,744.0531 1412.0036,744.0531 Q1410.1603,744.0531 1409.1899,742.8385 Q1408.2194,741.6239 1408.2194,739.329 Q1408.2194,737.028 1409.1899,735.8134 Q1410.1603,734.5988 1412.0036,734.5988 Q1412.5224,734.5988 1412.9985,734.7087 Q1413.4745,734.8185 1413.8896,735.0382 L1413.8896,737.0402 Q1413.4257,736.613 1412.9893,736.4146 Q1412.5529,736.2162 1412.089,736.2162 Q1411.1003,736.2162 1410.5967,737.0005 Q1410.0932,737.7848 1410.0932,739.329 Q1410.0932,740.8671 1410.5967,741.6514 Q1411.1003,742.4357 1412.089,742.4357 Q1412.5529,742.4357 1412.9893,742.2373 Q1413.4257,742.039 1413.8896,741.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1434.8958" y="743.9128">Lexakai</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1344.7917" x2="1542.7083" y1="754.8828" y2="754.8828"/><polygon fill="#FFFF44" points="1355.2083,785.0444,1359.375,789.211,1355.2083,793.3777,1351.0417,789.211" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1366.6667" y="797.1639">Lexakai()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1344.7917" x2="1400" y1="773.0886" y2="773.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1403.125" y="776.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1487.5" x2="1542.7083" y1="773.0886" y2="773.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1344.7917" x2="1542.7083" y1="806.8726" y2="806.8726"/><ellipse cx="1355.2083" cy="818.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1366.6667" y="825.2421">void main(String[] arguments)</text><ellipse cx="1355.2083" cy="838.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="1366.6667" y="844.987">LexakaiProject project(Folder)</text><!--MD5=[cd91c464fa9582b032e673759c376552]
class LexakaiClassDiagram--><rect codeLine="49" fill="#282828" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1393.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1393.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1416.3411"/><rect codeLine="49" fill="none" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1393.2861"/><ellipse cx="432.2917" cy="1408.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M434.2021,1413.4054 Q433.7748,1413.6251 433.3049,1413.7349 Q432.8349,1413.8448 432.3161,1413.8448 Q430.4728,1413.8448 429.5024,1412.6302 Q428.5319,1411.4156 428.5319,1409.1207 Q428.5319,1406.8197 429.5024,1405.6051 Q430.4728,1404.3905 432.3161,1404.3905 Q432.8349,1404.3905 433.311,1404.5003 Q433.787,1404.6102 434.2021,1404.8299 L434.2021,1406.8319 Q433.7382,1406.4046 433.3018,1406.2063 Q432.8654,1406.0079 432.4015,1406.0079 Q431.4128,1406.0079 430.9092,1406.7922 Q430.4057,1407.5765 430.4057,1409.1207 Q430.4057,1410.6588 430.9092,1411.4431 Q431.4128,1412.2274 432.4015,1412.2274 Q432.8654,1412.2274 433.3018,1412.029 Q433.7382,1411.8306 434.2021,1411.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="139.5833" x="455.2083" y="1413.7044">LexakaiClassDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="277.0833" x2="741.6667" y1="1424.6745" y2="1424.6745"/><ellipse cx="287.5" cy="1460.0444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="298.9583" y="1466.9556">LexakaiClassDiagram(LexakaiProject, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="465.625" y1="1442.8802" y2="1442.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="468.75" y="1446.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="553.125" x2="741.6667" y1="1442.8802" y2="1442.8802"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="741.6667" y1="1476.6642" y2="1476.6642"/><ellipse cx="287.5" cy="1488.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="298.9583" y="1495.0338">boolean automaticMethodGroups()</text><ellipse cx="287.5" cy="1507.8674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="298.9583" y="1514.7786">boolean has(UmlInheritance)</text><ellipse cx="287.5" cy="1527.6123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="298.9583" y="1534.5235">LexakaiProject project()</text><ellipse cx="287.5" cy="1547.3572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="298.9583" y="1554.2684">Set&lt;String&gt; qualifiedTypeNames()</text><ellipse cx="287.5" cy="1567.1021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="298.9583" y="1574.0133">Referent referent(Type referent)</text><ellipse cx="287.5" cy="1586.8469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="298.9583" y="1593.7581">String title()</text><ellipse cx="287.5" cy="1630.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="298.9583" y="1637.4146">boolean isPackageDiagram()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="482.8125" y1="1613.3392" y2="1613.3392"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="485.9375" y="1617.1488">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="535.9375" x2="741.6667" y1="1613.3392" y2="1613.3392"/><ellipse cx="287.5" cy="1674.1597" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="298.9583" y="1681.071">HashSet&lt;String&gt; abstractSuperClasses()</text><ellipse cx="287.5" cy="1693.9046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="298.9583" y="1700.8158">boolean add(UmlInheritance)</text><ellipse cx="287.5" cy="1713.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="298.9583" y="1720.5607">List&lt;MethodDeclaration&gt; includedMethods(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1733.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="298.9583" y="1740.3056">List&lt;UmlType&gt; includedQualifiedTypes()</text><ellipse cx="287.5" cy="1753.1392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="298.9583" y="1760.0505">boolean isEmpty()</text><ellipse cx="287.5" cy="1772.8841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="298.9583" y="1779.7953">HashSet&lt;Object&gt; superInterfaces()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="475" y1="1656.9956" y2="1656.9956"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="478.125" y="1660.8053">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="543.75" x2="741.6667" y1="1656.9956" y2="1656.9956"/><ellipse cx="287.5" cy="1816.5405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="298.9583" y="1823.4517">void include(UmlType)</text><ellipse cx="287.5" cy="1836.2854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="298.9583" y="1843.1966">boolean includeMembers(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1856.0303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="298.9583" y="1862.9415">boolean includeOverrides(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1875.7751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="434.375" x="298.9583" y="1882.6864">void includedMethods(TypeDeclaration&lt;?&gt;, Consumer&lt;MethodDeclaration&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="480.2083" y1="1799.3764" y2="1799.3764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="483.3333" y="1803.186">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="538.5417" x2="741.6667" y1="1799.3764" y2="1799.3764"/><ellipse cx="287.5" cy="1919.4316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="298.9583" y="1926.3428">String identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="481.25" y1="1902.2675" y2="1902.2675"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="484.375" y="1906.0771">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="537.5" x2="741.6667" y1="1902.2675" y2="1902.2675"/><ellipse cx="287.5" cy="1963.088" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="298.9583" y="1969.9992">boolean includesQualifiedTypeName(String typeName)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="481.25" y1="1945.9239" y2="1945.9239"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="484.375" y="1949.7335">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="537.5" x2="741.6667" y1="1945.9239" y2="1945.9239"/><!--MD5=[0a3ce8fd96b244d9fb97109c62f8cd04]
class LexakaiProject--><rect codeLine="83" fill="#282828" height="1081.132" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="248.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="248.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="271.5495"/><rect codeLine="83" fill="none" height="1081.132" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="248.4945"/><ellipse cx="446.3542" cy="264.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M448.2646,268.6137 Q447.8373,268.8334 447.3674,268.9433 Q446.8974,269.0531 446.3786,269.0531 Q444.5353,269.0531 443.5649,267.8385 Q442.5944,266.6239 442.5944,264.329 Q442.5944,262.028 443.5649,260.8134 Q444.5353,259.5988 446.3786,259.5988 Q446.8974,259.5988 447.3735,259.7087 Q447.8495,259.8185 448.2646,260.0382 L448.2646,262.0402 Q447.8007,261.613 447.3643,261.4146 Q446.9279,261.2162 446.464,261.2162 Q445.4753,261.2162 444.9717,262.0005 Q444.4682,262.7848 444.4682,264.329 Q444.4682,265.8671 444.9717,266.6514 Q445.4753,267.4357 446.464,267.4357 Q446.9279,267.4357 447.3643,267.2373 Q447.8007,267.039 448.2646,266.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="469.2708" y="268.9128">LexakaiProject</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="276.5625" x2="723.4375" y1="279.8828" y2="279.8828"/><ellipse cx="286.9792" cy="315.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="298.4375" y="322.1639">LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="456.25" y1="298.0886" y2="298.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="459.375" y="301.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="543.75" x2="723.4375" y1="298.0886" y2="298.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="723.4375" y1="331.8726" y2="331.8726"/><ellipse cx="286.9792" cy="343.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="298.4375" y="350.2421">boolean automaticMethodGroups()</text><ellipse cx="286.9792" cy="363.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="416.6667" x="298.4375" y="369.987">LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)</text><ellipse cx="286.9792" cy="382.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="298.4375" y="389.7319">void diagramNames(Consumer&lt;String&gt;)</text><ellipse cx="286.9792" cy="402.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="298.4375" y="409.4767">void diagrams(Consumer&lt;LexakaiClassDiagram&gt;)</text><ellipse cx="286.9792" cy="422.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="298.4375" y="429.2216">Pattern javadocSectionPattern()</text><ellipse cx="286.9792" cy="442.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="298.4375" y="448.9665">LexakaiProject javadocSectionPattern(Pattern)</text><ellipse cx="286.9792" cy="461.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="298.4375" y="468.7113">String property(String key)</text><ellipse cx="286.9792" cy="481.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="298.4375" y="488.4562">void typeDeclarations(Consumer&lt;TypeDeclaration&lt;?&gt;&gt;)</text><ellipse cx="286.9792" cy="525.2014" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="364.5833" x="298.4375" y="532.1126">LexakaiProject buildPackageDiagrams(boolean packageDiagrams)</text><ellipse cx="286.9792" cy="544.9463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="298.4375" y="551.8575">boolean buildPackageDiagrams()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="469.7917" y1="508.0373" y2="508.0373"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="472.9167" y="511.8469">(building)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="530.2083" x2="723.4375" y1="508.0373" y2="508.0373"/><ellipse cx="286.9792" cy="588.6027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="298.4375" y="595.5139">boolean hasChildProjects()</text><ellipse cx="286.9792" cy="608.3476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="298.4375" y="615.2588">boolean hasSourceCode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="473.4375" y1="571.4386" y2="571.4386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="476.5625" y="575.2482">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="526.5625" x2="723.4375" y1="571.4386" y2="571.4386"/><ellipse cx="286.9792" cy="652.004" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="298.4375" y="658.9152">boolean addHtmlAnchors()</text><ellipse cx="286.9792" cy="671.7489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="298.4375" y="678.6601">LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)</text><ellipse cx="286.9792" cy="691.4937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="298.4375" y="698.4049">ObjectList&lt;LexakaiProject&gt; childProjects()</text><ellipse cx="286.9792" cy="711.2386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="278.125" x="298.4375" y="718.1498">ObjectList&lt;JavadocCoverage&gt; javadocCoverage()</text><ellipse cx="286.9792" cy="730.9835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="298.4375" y="737.8947">VariableMap&lt;String&gt; properties()</text><ellipse cx="286.9792" cy="750.7284" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="298.4375" y="757.6396">List&lt;TypeDeclaration&lt;?&gt;&gt; typeDeclarations()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="465.625" y1="634.8399" y2="634.8399"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="468.75" y="638.6495">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="534.375" x2="723.4375" y1="634.8399" y2="634.8399"/><ellipse cx="286.9792" cy="794.3848" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="298.4375" y="801.296">Folder diagramFolder()</text><ellipse cx="286.9792" cy="814.1296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="298.4375" y="821.0409">Folder documentationFolder()</text><ellipse cx="286.9792" cy="833.8745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="298.4375" y="840.7857">Folder documentationLexakaiFolder()</text><ellipse cx="286.9792" cy="853.6194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="298.4375" y="860.5306">Folder folder()</text><ellipse cx="286.9792" cy="873.3643" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="298.4375" y="880.2755">Folder imagesFolder()</text><ellipse cx="286.9792" cy="893.1091" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="298.4375" y="900.0203">File parentReadMeTemplateFile()</text><ellipse cx="286.9792" cy="912.854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="298.4375" y="919.7652">File readMeTemplateFile()</text><ellipse cx="286.9792" cy="932.5989" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="298.4375" y="939.5101">File readmeFile()</text><ellipse cx="286.9792" cy="952.3438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="298.4375" y="959.255">Folder relativeFolder()</text><ellipse cx="286.9792" cy="972.0886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="298.4375" y="978.9998">Folder sourceFolder()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="464.5833" y1="777.2207" y2="777.2207"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="467.7083" y="781.0303">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="535.4167" x2="723.4375" y1="777.2207" y2="777.2207"/><ellipse cx="286.9792" cy="1015.745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="298.4375" y="1022.6563">LexakaiProject includeObjectMethods(boolean include)</text><ellipse cx="286.9792" cy="1035.4899" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="298.4375" y="1042.4011">boolean includeObjectMethods()</text><ellipse cx="286.9792" cy="1055.2348" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="298.4375" y="1062.146">LexakaiProject includeProtectedMethods(boolean include)</text><ellipse cx="286.9792" cy="1074.9797" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="298.4375" y="1081.8909">boolean includeProtectedMethods()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="470.8333" y1="998.5809" y2="998.5809"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="473.9583" y="1002.3905">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.1667" x2="723.4375" y1="998.5809" y2="998.5809"/><ellipse cx="286.9792" cy="1118.6361" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="298.4375" y="1125.5473">Version version()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="471.875" y1="1101.472" y2="1101.472"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="475" y="1105.2816">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="528.125" x2="723.4375" y1="1101.472" y2="1101.472"/><ellipse cx="286.9792" cy="1162.2925" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="298.4375" y="1169.2037">void initialize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="470.3125" y1="1145.1284" y2="1145.1284"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="473.4375" y="1148.938">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="723.4375" y1="1145.1284" y2="1145.1284"/><ellipse cx="286.9792" cy="1205.9489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="298.4375" y="1212.8601">Percent averageCoverage()</text><ellipse cx="286.9792" cy="1225.6938" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="298.4375" y="1232.605">String meterMarkdownForPercent(Percent)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="478.6458" y1="1188.7848" y2="1188.7848"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="481.7708" y="1192.5944">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="521.3542" x2="723.4375" y1="1188.7848" y2="1188.7848"/><ellipse cx="286.9792" cy="1269.3502" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="298.4375" y="1276.2614">String name()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="471.875" y1="1252.1861" y2="1252.1861"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="475" y="1255.9957">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="528.125" x2="723.4375" y1="1252.1861" y2="1252.1861"/><ellipse cx="286.9792" cy="1313.0066" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="298.4375" y="1319.9178">void updateReadMe()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="480.2083" y1="1295.8425" y2="1295.8425"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="483.3333" y="1299.6521">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="519.7917" x2="723.4375" y1="1295.8425" y2="1295.8425"/><!--MD5=[e90ef443e2de7449fab3197113b43b47]
class LexakaiClassDiagram.Referent--><rect codeLine="138" fill="#282828" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1535.9375" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1535.9375" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1535.9375" y="76.7578"/><rect codeLine="138" fill="none" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1535.9375" y="53.7028"/><ellipse cx="1550.5208" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1552.4312,73.822 Q1552.004,74.0417 1551.534,74.1516 Q1551.064,74.2615 1550.5452,74.2615 Q1548.702,74.2615 1547.7315,73.0469 Q1546.7611,71.8323 1546.7611,69.5374 Q1546.7611,67.2363 1547.7315,66.0217 Q1548.702,64.8071 1550.5452,64.8071 Q1551.064,64.8071 1551.5401,64.917 Q1552.0162,65.0269 1552.4312,65.2466 L1552.4312,67.2485 Q1551.9674,66.8213 1551.531,66.6229 Q1551.0946,66.4246 1550.6307,66.4246 Q1549.6419,66.4246 1549.1384,67.2089 Q1548.6348,67.9932 1548.6348,69.5374 Q1548.6348,71.0754 1549.1384,71.8597 Q1549.6419,72.644 1550.6307,72.644 Q1551.0946,72.644 1551.531,72.4457 Q1551.9674,72.2473 1552.4312,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="196.875" x="1567.1875" y="74.1211">LexakaiClassDiagram.Referent</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1536.9792" x2="1769.2708" y1="85.0911" y2="85.0911"/><ellipse cx="1547.3958" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1558.8542" y="127.3722">Referent(String, Type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1536.9792" x2="1609.375" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1612.5" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1696.875" x2="1769.2708" y1="103.2969" y2="103.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1536.9792" x2="1769.2708" y1="137.0809" y2="137.0809"/><ellipse cx="1547.3958" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1558.8542" y="155.4504">String cardinality()</text><ellipse cx="1547.3958" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="1558.8542" y="175.1953">Type referent()</text><!--MD5=[d577b87d57838e1c1e0781a982567153]
reverse link BaseRepeater to BaseLexakaiDiagram--><path codeLine="12" d="M342.7708,156.3174 C313.6042,179.4632 278.6667,211.9736 257.2917,248.4945 C160.0417,414.6299 133.3958,649.5153 126.3646,745.109 " fill="none" id="BaseRepeater-backto-BaseLexakaiDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="338.5938,150.3382,359.5729,143.4945,347.4375,161.932,338.5938,150.3382" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d0aa8f8bebcfc138e40d9396e552f097]
reverse link Comparable to LexakaiProject.JavadocCoverage--><path codeLine="20" d="M684.2083,123.8695 C774.6563,132.182 921.25,159.557 1006.25,248.4945 C1109.25,356.2653 1141.1458,529.0049 1150.1875,649.9215 " fill="none" id="Comparable-backto-LexakaiProject.JavadocCoverage" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="683.5104,131.1195,663.3229,122.1924,684.6771,116.5882,683.5104,131.1195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1a1431ce37d8053f400fb8f8766fec82]
reverse link Application to Lexakai--><path codeLine="37" d="M1443.75,164.5049 C1443.75,279.3903 1443.75,588.1611 1443.75,723.2757 " fill="none" id="Application-backto-Lexakai" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1436.4583,164.182,1443.75,143.3486,1451.0417,164.182,1436.4583,164.182" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fa551b829565ba58f1de5fa1b0985ed4]
reverse link BaseLexakaiDiagram to LexakaiClassDiagram--><path codeLine="47" d="M131.8021,853.5986 C146.3021,957.109 182.8333,1167.1195 257.2917,1329.7445 C266.9792,1350.9111 277.9792,1372.1195 289.8333,1393.057 " fill="none" id="BaseLexakaiDiagram-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="124.5729,854.5049,129,832.8903,139.0208,852.557,124.5729,854.5049" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[71641bad2aa654f1bc64e2946986b1b1]
reverse link Named to LexakaiClassDiagram--><path codeLine="48" d="M899.9375,834.2757 C906.9479,929.557 913.7292,1159.7028 836.4583,1329.7445 C813.1979,1380.9215 779.7188,1429.6715 742.9479,1473.7653 " fill="none" id="Named-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="892.6563,834.682,898.2292,813.3278,907.1875,833.4945,892.6563,834.682" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ee932fd7f1e0a70ce902c840e2ec0ec6]
reverse link BaseRepeater to LexakaiProject--><path codeLine="80" d="M400.7188,164.1299 C404.1875,185.9528 408.7813,214.8174 414.0938,248.2028 " fill="none" id="BaseRepeater-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="393.4792,165.0778,397.4063,143.3486,407.8854,162.7861,393.4792,165.0778" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7833d3205852db5b5922448a307d98f4]
reverse link Comparable to LexakaiProject--><path codeLine="81" d="M598.3125,164.1299 C594.875,185.9528 590.3229,214.8174 585.0625,248.2028 " fill="none" id="Comparable-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="591.1458,162.7965,601.5833,143.3486,605.5521,165.0674,591.1458,162.7965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b04245787456317ee4873214d554c407]
link LexakaiProject to LexakaiProject--><path d="M1328.125,701.8486 C1350.3646,719.3382 1364.5104,748.4215 1364.5104,789.1195 C1364.5104,829.8174 1350.3646,858.9007 1328.125,876.3903 " fill="none" id="LexakaiProject-to-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1364.5104,772.4528,1364.5104,782.712,1366.6257,777.2122,1372.1255,779.3275,1364.5104,772.4528" style="stroke:#545454;stroke-width:1.5625;"/><line style="stroke:#545454;stroke-width:1.5625;" x1="1366.6257" x2="1402.0104" y1="777.2122" y2="789.1195"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="56.25" x="1373.8854" y="793.9128">"creates"</text><!--MD5=[2999a4690b182830f409d0dac95b553a]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Comparable <|- - LexakaiProject.JavadocCoverage
    class LexakaiProject.JavadocCoverage
    {
        - -
        +String detailed()
        +LexakaiProject project()
        - -(collection)- -
        +StringList asStringList()
        +StringList description()
        +StringList significantUndocumentedClasses()
        +StringList undocumentedClasses()
        - -(distance)- -
        +String meterMarkdown()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> javadocCoverage()
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadMeTemplateFile()
        +File readMeTemplateFile()
        +File readmeFile()
        +Folder relativeFolder()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Comparable <|- - LexakaiProject.JavadocCoverage
    class LexakaiProject.JavadocCoverage
    {
        - -
        +String detailed()
        +LexakaiProject project()
        - -(collection)- -
        +StringList asStringList()
        +StringList description()
        +StringList significantUndocumentedClasses()
        +StringList undocumentedClasses()
        - -(distance)- -
        +String meterMarkdown()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> javadocCoverage()
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadMeTemplateFile()
        +File readMeTemplateFile()
        +File readmeFile()
        +Folder relativeFolder()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>