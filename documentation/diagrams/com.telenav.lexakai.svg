<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1985.4167px" preserveAspectRatio="none" style="width:1909px;height:1985px;background:#333333;" version="1.1" viewBox="0 0 1909 1985" width="1909.375px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="220.8333" x="832.776" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="197.9167" x="844.2344" y="30.5583">com.telenav.lexakai</text><!--MD5=[9f629a7fa9860d04f332207d261c63eb]
cluster LexakaiProject--><polygon fill="#333333" points="1429.1667,52.6611,1534.375,52.6611,1541.6667,79.8828,1782.2917,79.8828,1782.2917,273.4945,1429.1667,273.4945,1429.1667,52.6611" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="1429.1667" x2="1541.6667" y1="79.8828" y2="79.8828"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="1436.4583" y="69.9544">LexakaiProject</text><!--MD5=[d1d1410ec48872eaba86b31c90435c19]
class LexakaiProject.JavadocCoverage--><rect codeLine="19" fill="#282828" height="146.7794" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1473.9583" y="101.6195"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1473.9583" y="101.6195"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1473.9583" y="124.6745"/><rect codeLine="19" fill="none" height="146.7794" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1473.9583" y="101.6195"/><ellipse cx="1553.125" cy="117.3136" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1555.0354,121.7387 Q1554.6082,121.9584 1554.1382,122.0683 Q1553.6682,122.1781 1553.1494,122.1781 Q1551.3062,122.1781 1550.3357,120.9635 Q1549.3652,119.7489 1549.3652,117.454 Q1549.3652,115.153 1550.3357,113.9384 Q1551.3062,112.7238 1553.1494,112.7238 Q1553.6682,112.7238 1554.1443,112.8337 Q1554.6204,112.9435 1555.0354,113.1632 L1555.0354,115.1652 Q1554.5715,114.738 1554.1351,114.5396 Q1553.6987,114.3412 1553.2349,114.3412 Q1552.2461,114.3412 1551.7426,115.1255 Q1551.239,115.9098 1551.239,117.454 Q1551.239,118.9921 1551.7426,119.7764 Q1552.2461,120.5607 1553.2349,120.5607 Q1553.6987,120.5607 1554.1351,120.3623 Q1554.5715,120.164 1555.0354,119.7367 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="110.4167" x="1576.0417" y="122.0378">JavadocCoverage</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1475" x2="1756.25" y1="133.0078" y2="133.0078"/><ellipse cx="1485.4167" cy="168.3777" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1496.875" y="175.2889">StringList description()</text><ellipse cx="1485.4167" cy="188.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="1496.875" y="195.0338">StringList significantUndocumentedClasses()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1475" x2="1581.25" y1="151.2136" y2="151.2136"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1584.375" y="155.0232">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1650" x2="1756.25" y1="151.2136" y2="151.2136"/><ellipse cx="1485.4167" cy="231.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1496.875" y="238.6902">Percent percent()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1475" x2="1594.2708" y1="214.6149" y2="214.6149"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1597.3958" y="218.4245">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1636.9792" x2="1756.25" y1="214.6149" y2="214.6149"/><!--MD5=[762aa3d0df6a9d47bd8e105afbd066b5]
class BaseRepeater--><rect codeLine="6" fill="#282828" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="218.2292" y="151.0986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="218.2292" y="151.0986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="218.2292" y="174.1536"/><rect codeLine="6" fill="none" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="218.2292" y="151.0986"/><ellipse cx="232.8125" cy="166.7928" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M232.9264,163.4949 L232.078,167.2241 L233.7809,167.2241 Z M231.8278,161.8469 L234.0312,161.8469 L236.4909,170.9595 L234.6903,170.9595 L234.1288,168.7073 L231.7179,168.7073 L231.1686,170.9595 L229.3681,170.9595 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="249.4792" y="171.5169">BaseRepeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="219.2708" x2="341.1458" y1="182.487" y2="182.487"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="219.2708" x2="341.1458" y1="190.8203" y2="190.8203"/><!--MD5=[d366ac531d94add6ab38903d6804b189]
class BaseLexakaiDiagram--><rect codeLine="12" fill="#282828" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="785.9945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="785.9945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="809.0495"/><rect codeLine="12" fill="none" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="785.9945"/><ellipse cx="49.7396" cy="801.6886" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M49.8535,798.3907 L49.0051,802.12 L50.708,802.12 Z M48.7549,796.7428 L50.9583,796.7428 L53.418,805.8553 L51.6174,805.8553 L51.0559,803.6031 L48.645,803.6031 L48.0957,805.8553 L46.2952,805.8553 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="134.375" x="72.1354" y="806.4128">BaseLexakaiDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="237.5" y1="817.3828" y2="817.3828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="237.5" y1="825.7161" y2="825.7161"/><ellipse cx="20.8333" cy="837.1745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="32.2917" y="844.0857">String uml(String title)</text><polygon fill="#FFFF44" points="20.8333,851.711,25,855.8777,20.8333,860.0444,16.6667,855.8777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="32.2917" y="863.8306">void onUml(IndentingStringBuilder)</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="9" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="805.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="805.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="828.8411"/><rect codeLine="9" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="854.6875" y="805.7861"/><ellipse cx="869.2708" cy="821.4803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M866.154,818.6422 L866.154,817.0553 L871.58,817.0553 L871.58,818.6422 L869.7673,818.6422 L869.7673,824.5809 L871.58,824.5809 L871.58,826.1678 L866.154,826.1678 L866.154,824.5809 L867.9667,824.5809 L867.9667,818.6422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="885.9375" y="826.2044">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="855.7292" x2="935.9375" y1="837.1745" y2="837.1745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="855.7292" x2="935.9375" y1="845.5078" y2="845.5078"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#282828" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1018.2292" y="151.0986"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1018.2292" y="151.0986"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1018.2292" y="174.1536"/><rect fill="none" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1018.2292" y="151.0986"/><ellipse cx="1032.8125" cy="166.7928" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1034.7229,171.2179 Q1034.2957,171.4376 1033.8257,171.5474 Q1033.3557,171.6573 1032.8369,171.6573 Q1030.9937,171.6573 1030.0232,170.4427 Q1029.0527,169.2281 1029.0527,166.9332 Q1029.0527,164.6322 1030.0232,163.4176 Q1030.9937,162.203 1032.8369,162.203 Q1033.3557,162.203 1033.8318,162.3128 Q1034.3079,162.4227 1034.7229,162.6424 L1034.7229,164.6444 Q1034.259,164.2171 1033.8226,164.0188 Q1033.3862,163.8204 1032.9224,163.8204 Q1031.9336,163.8204 1031.4301,164.6047 Q1030.9265,165.389 1030.9265,166.9332 Q1030.9265,168.4713 1031.4301,169.2556 Q1031.9336,170.0399 1032.9224,170.0399 Q1033.3862,170.0399 1033.8226,169.8415 Q1034.259,169.6431 1034.7229,169.2159 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1049.4792" y="171.5169">Application</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1019.2708" x2="1128.6458" y1="182.487" y2="182.487"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1019.2708" x2="1128.6458" y1="190.8203" y2="190.8203"/><!--MD5=[71ba3f8efe45f4767ee229c95530b131]
class Lexakai--><rect codeLine="29" fill="#282828" height="111.4563" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="973.9583" y="774.0153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="973.9583" y="774.0153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="973.9583" y="797.0703"/><rect codeLine="29" fill="none" height="111.4563" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="973.9583" y="774.0153"/><ellipse cx="1042.1875" cy="789.7095" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1044.0979,794.1345 Q1043.6707,794.3542 1043.2007,794.4641 Q1042.7307,794.574 1042.2119,794.574 Q1040.3687,794.574 1039.3982,793.3594 Q1038.4277,792.1448 1038.4277,789.8499 Q1038.4277,787.5488 1039.3982,786.3342 Q1040.3687,785.1196 1042.2119,785.1196 Q1042.7307,785.1196 1043.2068,785.2295 Q1043.6829,785.3394 1044.0979,785.5591 L1044.0979,787.561 Q1043.634,787.1338 1043.1976,786.9354 Q1042.7612,786.7371 1042.2974,786.7371 Q1041.3086,786.7371 1040.8051,787.5214 Q1040.3015,788.3057 1040.3015,789.8499 Q1040.3015,791.3879 1040.8051,792.1722 Q1041.3086,792.9565 1042.2974,792.9565 Q1042.7612,792.9565 1043.1976,792.7582 Q1043.634,792.5598 1044.0979,792.1326 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1065.1042" y="794.4336">Lexakai</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="975" x2="1172.9167" y1="805.4036" y2="805.4036"/><polygon fill="#FFFF44" points="985.4167,835.5652,989.5833,839.7319,985.4167,843.8985,981.25,839.7319" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="996.875" y="847.6847">Lexakai()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="975" x2="1030.2083" y1="823.6094" y2="823.6094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1033.3333" y="827.419">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1117.7083" x2="1172.9167" y1="823.6094" y2="823.6094"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="975" x2="1172.9167" y1="857.3934" y2="857.3934"/><ellipse cx="985.4167" cy="868.8517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="996.875" y="875.7629">void main(String[] arguments)</text><!--MD5=[cd91c464fa9582b032e673759c376552]
class LexakaiClassDiagram--><rect codeLine="39" fill="#282828" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1392.2445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1392.2445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1415.2995"/><rect codeLine="39" fill="none" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="276.0417" y="1392.2445"/><ellipse cx="432.2917" cy="1407.9386" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M434.2021,1412.3637 Q433.7748,1412.5834 433.3049,1412.6933 Q432.8349,1412.8031 432.3161,1412.8031 Q430.4728,1412.8031 429.5024,1411.5885 Q428.5319,1410.3739 428.5319,1408.079 Q428.5319,1405.778 429.5024,1404.5634 Q430.4728,1403.3488 432.3161,1403.3488 Q432.8349,1403.3488 433.311,1403.4587 Q433.787,1403.5685 434.2021,1403.7882 L434.2021,1405.7902 Q433.7382,1405.363 433.3018,1405.1646 Q432.8654,1404.9662 432.4015,1404.9662 Q431.4128,1404.9662 430.9092,1405.7505 Q430.4057,1406.5348 430.4057,1408.079 Q430.4057,1409.6171 430.9092,1410.4014 Q431.4128,1411.1857 432.4015,1411.1857 Q432.8654,1411.1857 433.3018,1410.9873 Q433.7382,1410.789 434.2021,1410.3617 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="139.5833" x="455.2083" y="1412.6628">LexakaiClassDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="277.0833" x2="741.6667" y1="1423.6328" y2="1423.6328"/><ellipse cx="287.5" cy="1459.0027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="298.9583" y="1465.9139">LexakaiClassDiagram(LexakaiProject, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="465.625" y1="1441.8386" y2="1441.8386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="468.75" y="1445.6482">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="553.125" x2="741.6667" y1="1441.8386" y2="1441.8386"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="741.6667" y1="1475.6226" y2="1475.6226"/><ellipse cx="287.5" cy="1487.0809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="298.9583" y="1493.9921">boolean automaticMethodGroups()</text><ellipse cx="287.5" cy="1506.8258" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="298.9583" y="1513.737">boolean has(UmlInheritance)</text><ellipse cx="287.5" cy="1526.5706" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="298.9583" y="1533.4819">LexakaiProject project()</text><ellipse cx="287.5" cy="1546.3155" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="298.9583" y="1553.2267">Set&lt;String&gt; qualifiedTypeNames()</text><ellipse cx="287.5" cy="1566.0604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="298.9583" y="1572.9716">Referent referent(Type referent)</text><ellipse cx="287.5" cy="1585.8053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="298.9583" y="1592.7165">String title()</text><ellipse cx="287.5" cy="1629.4617" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="298.9583" y="1636.3729">boolean isPackageDiagram()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="482.8125" y1="1612.2976" y2="1612.2976"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="485.9375" y="1616.1072">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="535.9375" x2="741.6667" y1="1612.2976" y2="1612.2976"/><ellipse cx="287.5" cy="1673.1181" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="298.9583" y="1680.0293">HashSet&lt;String&gt; abstractSuperClasses()</text><ellipse cx="287.5" cy="1692.863" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="298.9583" y="1699.7742">boolean add(UmlInheritance)</text><ellipse cx="287.5" cy="1712.6078" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="298.9583" y="1719.519">List&lt;MethodDeclaration&gt; includedMethods(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1732.3527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="298.9583" y="1739.2639">List&lt;UmlType&gt; includedQualifiedTypes()</text><ellipse cx="287.5" cy="1752.0976" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="298.9583" y="1759.0088">boolean isEmpty()</text><ellipse cx="287.5" cy="1771.8424" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="298.9583" y="1778.7537">HashSet&lt;Object&gt; superInterfaces()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="475" y1="1655.954" y2="1655.954"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="478.125" y="1659.7636">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="543.75" x2="741.6667" y1="1655.954" y2="1655.954"/><ellipse cx="287.5" cy="1815.4989" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="298.9583" y="1822.4101">void include(UmlType)</text><ellipse cx="287.5" cy="1835.2437" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="298.9583" y="1842.1549">boolean includeMembers(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1854.9886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="298.9583" y="1861.8998">boolean includeOverrides(TypeDeclaration&lt;?&gt;)</text><ellipse cx="287.5" cy="1874.7335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="434.375" x="298.9583" y="1881.6447">void includedMethods(TypeDeclaration&lt;?&gt;, Consumer&lt;MethodDeclaration&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="480.2083" y1="1798.3348" y2="1798.3348"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="483.3333" y="1802.1444">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="538.5417" x2="741.6667" y1="1798.3348" y2="1798.3348"/><ellipse cx="287.5" cy="1918.3899" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="298.9583" y="1925.3011">String identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="481.25" y1="1901.2258" y2="1901.2258"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="484.375" y="1905.0354">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="537.5" x2="741.6667" y1="1901.2258" y2="1901.2258"/><ellipse cx="287.5" cy="1962.0463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="298.9583" y="1968.9575">boolean includesQualifiedTypeName(String typeName)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="277.0833" x2="481.25" y1="1944.8822" y2="1944.8822"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="484.375" y="1948.6918">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="537.5" x2="741.6667" y1="1944.8822" y2="1944.8822"/><!--MD5=[0a3ce8fd96b244d9fb97109c62f8cd04]
class LexakaiProject--><rect codeLine="72" fill="#282828" height="997.9858" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="330.7861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="330.7861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="353.8411"/><rect codeLine="72" fill="none" height="997.9858" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="275.5208" y="330.7861"/><ellipse cx="446.3542" cy="346.4803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M448.2646,350.9054 Q447.8373,351.1251 447.3674,351.2349 Q446.8974,351.3448 446.3786,351.3448 Q444.5353,351.3448 443.5649,350.1302 Q442.5944,348.9156 442.5944,346.6207 Q442.5944,344.3197 443.5649,343.1051 Q444.5353,341.8905 446.3786,341.8905 Q446.8974,341.8905 447.3735,342.0003 Q447.8495,342.1102 448.2646,342.3299 L448.2646,344.3319 Q447.8007,343.9046 447.3643,343.7063 Q446.9279,343.5079 446.464,343.5079 Q445.4753,343.5079 444.9717,344.2922 Q444.4682,345.0765 444.4682,346.6207 Q444.4682,348.1588 444.9717,348.9431 Q445.4753,349.7274 446.464,349.7274 Q446.9279,349.7274 447.3643,349.529 Q447.8007,349.3306 448.2646,348.9034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="469.2708" y="351.2044">LexakaiProject</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="276.5625" x2="723.4375" y1="362.1745" y2="362.1745"/><ellipse cx="286.9792" cy="397.5444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="298.4375" y="404.4556">LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="456.25" y1="380.3802" y2="380.3802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="459.375" y="384.1899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="543.75" x2="723.4375" y1="380.3802" y2="380.3802"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="723.4375" y1="414.1642" y2="414.1642"/><ellipse cx="286.9792" cy="425.6226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="298.4375" y="432.5338">boolean automaticMethodGroups()</text><ellipse cx="286.9792" cy="445.3674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="416.6667" x="298.4375" y="452.2786">LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)</text><ellipse cx="286.9792" cy="465.1123" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="298.4375" y="472.0235">void diagramNames(Consumer&lt;String&gt;)</text><ellipse cx="286.9792" cy="484.8572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="298.4375" y="491.7684">void diagrams(Consumer&lt;LexakaiClassDiagram&gt;)</text><ellipse cx="286.9792" cy="504.6021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="298.4375" y="511.5133">JavadocCoverage javadocCoverage()</text><ellipse cx="286.9792" cy="524.3469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="298.4375" y="531.2581">Pattern javadocSectionPattern()</text><ellipse cx="286.9792" cy="544.0918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="298.4375" y="551.003">LexakaiProject javadocSectionPattern(Pattern)</text><ellipse cx="286.9792" cy="563.8367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="298.4375" y="570.7479">String property(String key)</text><ellipse cx="286.9792" cy="583.5815" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="298.4375" y="590.4928">void typeDeclarations(Consumer&lt;TypeDeclaration&lt;?&gt;&gt;)</text><ellipse cx="286.9792" cy="627.238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="364.5833" x="298.4375" y="634.1492">LexakaiProject buildPackageDiagrams(boolean packageDiagrams)</text><ellipse cx="286.9792" cy="646.9828" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="298.4375" y="653.894">boolean buildPackageDiagrams()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="469.7917" y1="610.0739" y2="610.0739"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="472.9167" y="613.8835">(building)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="530.2083" x2="723.4375" y1="610.0739" y2="610.0739"/><ellipse cx="286.9792" cy="690.6392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="298.4375" y="697.5505">boolean hasChildProjects()</text><ellipse cx="286.9792" cy="710.3841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="298.4375" y="717.2953">boolean hasSourceCode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="473.4375" y1="673.4751" y2="673.4751"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="476.5625" y="677.2847">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="526.5625" x2="723.4375" y1="673.4751" y2="673.4751"/><ellipse cx="286.9792" cy="754.0405" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="298.4375" y="760.9517">boolean addHtmlAnchors()</text><ellipse cx="286.9792" cy="773.7854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="298.4375" y="780.6966">LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)</text><ellipse cx="286.9792" cy="793.5303" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="298.4375" y="800.4415">VariableMap&lt;String&gt; properties()</text><ellipse cx="286.9792" cy="813.2751" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="298.4375" y="820.1864">List&lt;TypeDeclaration&lt;?&gt;&gt; typeDeclarations()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="465.625" y1="736.8764" y2="736.8764"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="468.75" y="740.686">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="534.375" x2="723.4375" y1="736.8764" y2="736.8764"/><ellipse cx="286.9792" cy="856.9316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="298.4375" y="863.8428">List&lt;Folder&gt; childProjects()</text><ellipse cx="286.9792" cy="876.6764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="298.4375" y="883.5876">Folder diagramFolder()</text><ellipse cx="286.9792" cy="896.4213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="298.4375" y="903.3325">Folder documentationFolder()</text><ellipse cx="286.9792" cy="916.1662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="298.4375" y="923.0774">Folder documentationLexakaiFolder()</text><ellipse cx="286.9792" cy="935.9111" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="298.4375" y="942.8223">Folder folder()</text><ellipse cx="286.9792" cy="955.6559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="298.4375" y="962.5671">Folder imagesFolder()</text><ellipse cx="286.9792" cy="975.4008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="298.4375" y="982.312">File parentReadmeTemplateFile()</text><ellipse cx="286.9792" cy="995.1457" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="298.4375" y="1002.0569">File readmeFile()</text><ellipse cx="286.9792" cy="1014.8905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="141.6667" x="298.4375" y="1021.8018">File readmeTemplateFile()</text><ellipse cx="286.9792" cy="1034.6354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="298.4375" y="1041.5466">Folder sourceFolder()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="464.5833" y1="839.7675" y2="839.7675"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="467.7083" y="843.5771">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="535.4167" x2="723.4375" y1="839.7675" y2="839.7675"/><ellipse cx="286.9792" cy="1078.2918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="298.4375" y="1085.203">LexakaiProject includeObjectMethods(boolean include)</text><ellipse cx="286.9792" cy="1098.0367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="298.4375" y="1104.9479">boolean includeObjectMethods()</text><ellipse cx="286.9792" cy="1117.7816" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="298.4375" y="1124.6928">LexakaiProject includeProtectedMethods(boolean include)</text><ellipse cx="286.9792" cy="1137.5264" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="298.4375" y="1144.4377">boolean includeProtectedMethods()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="470.8333" y1="1061.1277" y2="1061.1277"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="473.9583" y="1064.9373">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.1667" x2="723.4375" y1="1061.1277" y2="1061.1277"/><ellipse cx="286.9792" cy="1181.1829" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="298.4375" y="1188.0941">Version version()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="471.875" y1="1164.0188" y2="1164.0188"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="475" y="1167.8284">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="528.125" x2="723.4375" y1="1164.0188" y2="1164.0188"/><ellipse cx="286.9792" cy="1224.8393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="298.4375" y="1231.7505">void initialize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="470.3125" y1="1207.6752" y2="1207.6752"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="473.4375" y="1211.4848">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="529.6875" x2="723.4375" y1="1207.6752" y2="1207.6752"/><ellipse cx="286.9792" cy="1268.4957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="298.4375" y="1275.4069">String name()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="471.875" y1="1251.3316" y2="1251.3316"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="475" y="1255.1412">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="528.125" x2="723.4375" y1="1251.3316" y2="1251.3316"/><ellipse cx="286.9792" cy="1312.1521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="298.4375" y="1319.0633">void updateReadMe()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.5625" x2="480.2083" y1="1294.988" y2="1294.988"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="483.3333" y="1298.7976">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="519.7917" x2="723.4375" y1="1294.988" y2="1294.988"/><!--MD5=[e90ef443e2de7449fab3197113b43b47]
class LexakaiClassDiagram.Referent--><rect codeLine="123" fill="#282828" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1166.1458" y="109.432"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1166.1458" y="109.432"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1166.1458" y="132.487"/><rect codeLine="123" fill="none" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1166.1458" y="109.432"/><ellipse cx="1180.7292" cy="125.1261" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1182.6396,129.5512 Q1182.2123,129.7709 1181.7424,129.8808 Q1181.2724,129.9906 1180.7536,129.9906 Q1178.9103,129.9906 1177.9399,128.776 Q1176.9694,127.5614 1176.9694,125.2665 Q1176.9694,122.9655 1177.9399,121.7509 Q1178.9103,120.5363 1180.7536,120.5363 Q1181.2724,120.5363 1181.7485,120.6462 Q1182.2245,120.756 1182.6396,120.9757 L1182.6396,122.9777 Q1182.1757,122.5505 1181.7393,122.3521 Q1181.3029,122.1537 1180.839,122.1537 Q1179.8503,122.1537 1179.3467,122.938 Q1178.8432,123.7223 1178.8432,125.2665 Q1178.8432,126.8046 1179.3467,127.5889 Q1179.8503,128.3732 1180.839,128.3732 Q1181.3029,128.3732 1181.7393,128.1748 Q1182.1757,127.9765 1182.6396,127.5492 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="196.875" x="1197.3958" y="129.8503">LexakaiClassDiagram.Referent</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1167.1875" x2="1399.4792" y1="140.8203" y2="140.8203"/><ellipse cx="1177.6042" cy="176.1902" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1189.0625" y="183.1014">Referent(String, Type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1167.1875" x2="1239.5833" y1="159.0261" y2="159.0261"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1242.7083" y="162.8357">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1327.0833" x2="1399.4792" y1="159.0261" y2="159.0261"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1167.1875" x2="1399.4792" y1="192.8101" y2="192.8101"/><ellipse cx="1177.6042" cy="204.2684" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1189.0625" y="211.1796">String cardinality()</text><ellipse cx="1177.6042" cy="224.0133" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="1189.0625" y="230.9245">Type referent()</text><!--MD5=[d577b87d57838e1c1e0781a982567153]
reverse link BaseRepeater to BaseLexakaiDiagram--><path codeLine="11" d="M269.7188,219.9215 C241.2083,338.9945 162.5625,667.4528 134.2708,785.6299 " fill="none" id="BaseRepeater-backto-BaseLexakaiDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="262.7083,217.8903,274.6458,199.3278,276.8854,221.2861,262.7083,217.8903" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1a1431ce37d8053f400fb8f8766fec82]
reverse link Application to Lexakai--><path codeLine="28" d="M1073.9583,220.3174 C1073.9583,335.932 1073.9583,647.0465 1073.9583,773.8174 " fill="none" id="Application-backto-Lexakai" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1066.6667,220.1611,1073.9583,199.3278,1081.25,220.1611,1066.6667,220.1611" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fa551b829565ba58f1de5fa1b0985ed4]
reverse link BaseLexakaiDiagram to LexakaiClassDiagram--><path codeLine="37" d="M133.5104,894.182 C149.7604,991.2757 187.9583,1181.0674 257.2917,1328.7028 C267.1875,1349.7757 278.3438,1370.9111 290.3125,1391.7965 " fill="none" id="BaseLexakaiDiagram-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="126.3021,895.2549,130.1563,873.5153,140.6979,892.9111,126.3021,895.2549" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[71641bad2aa654f1bc64e2946986b1b1]
reverse link Named to LexakaiClassDiagram--><path codeLine="38" d="M899.3438,874.8382 C904.6875,964.734 907.6563,1173.8903 836.4583,1328.7028 C813.0625,1379.5778 779.625,1428.109 742.9792,1472.057 " fill="none" id="Named-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="892.0625,875.234,897.9271,853.9528,906.6146,874.2445,892.0625,875.234" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ee932fd7f1e0a70ce902c840e2ec0ec6]
reverse link BaseRepeater to LexakaiProject--><path codeLine="70" d="M294.7396,219.2549 C304.0104,246.7861 317.125,285.7028 332.2813,330.7028 " fill="none" id="BaseRepeater-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="287.7708,221.4007,288.0313,199.3278,301.5938,216.7445,287.7708,221.4007" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b04245787456317ee4873214d554c407]
link LexakaiProject to LexakaiProject--><path d="M1791.6667,748.8486 C1813.9063,765.057 1828.0521,792.0257 1828.0521,829.7445 C1828.0521,867.4632 1813.9063,894.432 1791.6667,910.6403 " fill="none" id="LexakaiProject-to-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1828.0521,813.0778,1828.0521,823.337,1830.1674,817.8372,1835.6672,819.9525,1828.0521,813.0778" style="stroke:#545454;stroke-width:1.5625;"/><line style="stroke:#545454;stroke-width:1.5625;" x1="1830.1674" x2="1865.5521" y1="817.8372" y2="829.7445"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="56.25" x="1837.4271" y="834.5378">"creates"</text><!--MD5=[2cafe23d568b29b4bf005a414428d7cd]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    class LexakaiProject.JavadocCoverage
    {
        - -(collection)- -
        +StringList description()
        +StringList significantUndocumentedClasses()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +JavadocCoverage javadocCoverage()
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +List<Folder> childProjects()
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadmeTemplateFile()
        +File readmeFile()
        +File readmeTemplateFile()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    class LexakaiProject.JavadocCoverage
    {
        - -(collection)- -
        +StringList description()
        +StringList significantUndocumentedClasses()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +JavadocCoverage javadocCoverage()
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +List<Folder> childProjects()
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadmeTemplateFile()
        +File readmeFile()
        +File readmeTemplateFile()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>