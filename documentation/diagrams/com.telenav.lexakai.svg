<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1942.7083px" preserveAspectRatio="none" style="width:1836px;height:1942px;background:#333333;" version="1.1" viewBox="0 0 1836 1942" width="1836.4583px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="220.8333" x="800.7813" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="197.9167" x="812.2396" y="30.5583">com.telenav.lexakai</text><!--MD5=[9f629a7fa9860d04f332207d261c63eb]
cluster LexakaiProject--><polygon fill="#333333" points="1025,622.9736,1130.2083,622.9736,1137.5,650.1953,1378.125,650.1953,1378.125,887.557,1025,887.557,1025,622.9736" style="stroke:#333333;stroke-width:2.0833333333333335;"/><line style="stroke:#333333;stroke-width:2.0833333333333335;" x1="1025" x2="1137.5" y1="650.1953" y2="650.1953"/><text fill="#C8AC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="1032.2917" y="640.2669">LexakaiProject</text><!--MD5=[d1d1410ec48872eaba86b31c90435c19]
class LexakaiProject.JavadocCoverage--><rect codeLine="21" fill="#282828" height="190.4358" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1069.7917" y="671.932"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1069.7917" y="671.932"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="283.3333" x="1069.7917" y="694.987"/><rect codeLine="21" fill="none" height="190.4358" id="LexakaiProject.JavadocCoverage" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="283.3333" x="1069.7917" y="671.932"/><ellipse cx="1148.9583" cy="687.6261" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1150.8687,692.0512 Q1150.4415,692.2709 1149.9715,692.3808 Q1149.5015,692.4906 1148.9827,692.4906 Q1147.1395,692.4906 1146.169,691.276 Q1145.1986,690.0614 1145.1986,687.7665 Q1145.1986,685.4655 1146.169,684.2509 Q1147.1395,683.0363 1148.9827,683.0363 Q1149.5015,683.0363 1149.9776,683.1462 Q1150.4537,683.256 1150.8687,683.4757 L1150.8687,685.4777 Q1150.4049,685.0505 1149.9685,684.8521 Q1149.5321,684.6537 1149.0682,684.6537 Q1148.0794,684.6537 1147.5759,685.438 Q1147.0723,686.2223 1147.0723,687.7665 Q1147.0723,689.3046 1147.5759,690.0889 Q1148.0794,690.8732 1149.0682,690.8732 Q1149.5321,690.8732 1149.9685,690.6748 Q1150.4049,690.4765 1150.8687,690.0492 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="110.4167" x="1171.875" y="692.3503">JavadocCoverage</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1070.8333" x2="1352.0833" y1="703.3203" y2="703.3203"/><ellipse cx="1081.25" cy="738.6902" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="1092.7083" y="745.6014">StringList description()</text><ellipse cx="1081.25" cy="758.4351" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="251.0417" x="1092.7083" y="765.3463">StringList significantUndocumentedClasses()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1070.8333" x2="1177.0833" y1="721.5261" y2="721.5261"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="1180.2083" y="725.3357">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1245.8333" x2="1352.0833" y1="721.5261" y2="721.5261"/><ellipse cx="1081.25" cy="802.0915" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="134.375" x="1092.7083" y="809.0027">String meterMarkdown()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1070.8333" x2="1180.7292" y1="784.9274" y2="784.9274"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="1183.8542" y="788.737">(distance)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1242.1875" x2="1352.0833" y1="784.9274" y2="784.9274"/><ellipse cx="1081.25" cy="845.7479" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="1092.7083" y="852.6591">Percent percent()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1070.8333" x2="1190.1042" y1="828.5838" y2="828.5838"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="1193.2292" y="832.3934">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1232.8125" x2="1352.0833" y1="828.5838" y2="828.5838"/><!--MD5=[762aa3d0df6a9d47bd8e105afbd066b5]
class BaseRepeater--><rect codeLine="6" fill="#282828" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="356.7708" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="356.7708" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="356.7708" y="118.4245"/><rect codeLine="6" fill="none" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="356.7708" y="95.3695"/><ellipse cx="371.3542" cy="111.0636" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M371.4681,107.7657 L370.6197,111.495 L372.3226,111.495 Z M370.3695,106.1178 L372.5728,106.1178 L375.0326,115.2303 L373.232,115.2303 L372.6705,112.9781 L370.2596,112.9781 L369.7103,115.2303 L367.9097,115.2303 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="388.0208" y="115.7878">BaseRepeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="357.8125" x2="479.6875" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="357.8125" x2="479.6875" y1="135.0911" y2="135.0911"/><!--MD5=[d366ac531d94add6ab38903d6804b189]
class BaseLexakaiDiagram--><rect codeLine="13" fill="#282828" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="723.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="723.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="746.5495"/><rect codeLine="13" fill="none" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="9.375" y="723.4945"/><ellipse cx="49.7396" cy="739.1886" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M49.8535,735.8907 L49.0051,739.62 L50.708,739.62 Z M48.7549,734.2428 L50.9583,734.2428 L53.418,743.3553 L51.6174,743.3553 L51.0559,741.1031 L48.645,741.1031 L48.0957,743.3553 L46.2952,743.3553 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="134.375" x="72.1354" y="743.9128">BaseLexakaiDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="10.4167" x2="237.5" y1="754.8828" y2="754.8828"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="10.4167" x2="237.5" y1="763.2161" y2="763.2161"/><ellipse cx="20.8333" cy="774.6745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="32.2917" y="781.5857">String uml(String title)</text><polygon fill="#FFFF44" points="20.8333,789.211,25,793.3777,20.8333,797.5444,16.6667,793.3777" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="32.2917" y="801.3306">void onUml(IndentingStringBuilder)</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="9" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="914.0625" y="743.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="914.0625" y="743.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="914.0625" y="766.3411"/><rect codeLine="9" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="914.0625" y="743.2861"/><ellipse cx="928.6458" cy="758.9803" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M925.529,756.1422 L925.529,754.5553 L930.955,754.5553 L930.955,756.1422 L929.1423,756.1422 L929.1423,762.0809 L930.955,762.0809 L930.955,763.6678 L925.529,763.6678 L925.529,762.0809 L927.3417,762.0809 L927.3417,756.1422 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="945.3125" y="763.7044">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="915.1042" x2="995.3125" y1="774.6745" y2="774.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="915.1042" x2="995.3125" y1="783.0078" y2="783.0078"/><!--MD5=[7a4729d26b999f6a4650b01106c103c5]
class Comparable--><rect codeLine="10" fill="#282828" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="579.6875" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="579.6875" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="579.6875" y="118.4245"/><rect codeLine="10" fill="none" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="579.6875" y="95.3695"/><ellipse cx="594.2708" cy="111.0636" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M591.154,108.2255 L591.154,106.6386 L596.58,106.6386 L596.58,108.2255 L594.7673,108.2255 L594.7673,114.1642 L596.58,114.1642 L596.58,115.7511 L591.154,115.7511 L591.154,114.1642 L592.9667,114.1642 L592.9667,108.2255 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="610.9375" y="115.7878">Comparable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="580.7292" x2="694.2708" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="580.7292" x2="694.2708" y1="135.0911" y2="135.0911"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#282828" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1447.3958" y="95.3695"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1447.3958" y="95.3695"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1447.3958" y="118.4245"/><rect fill="none" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1447.3958" y="95.3695"/><ellipse cx="1461.9792" cy="111.0636" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1463.8896,115.4887 Q1463.4623,115.7084 1462.9924,115.8183 Q1462.5224,115.9281 1462.0036,115.9281 Q1460.1603,115.9281 1459.1899,114.7135 Q1458.2194,113.4989 1458.2194,111.204 Q1458.2194,108.903 1459.1899,107.6884 Q1460.1603,106.4738 1462.0036,106.4738 Q1462.5224,106.4738 1462.9985,106.5837 Q1463.4745,106.6935 1463.8896,106.9132 L1463.8896,108.9152 Q1463.4257,108.488 1462.9893,108.2896 Q1462.5529,108.0912 1462.089,108.0912 Q1461.1003,108.0912 1460.5967,108.8755 Q1460.0932,109.6598 1460.0932,111.204 Q1460.0932,112.7421 1460.5967,113.5264 Q1461.1003,114.3107 1462.089,114.3107 Q1462.5529,114.3107 1462.9893,114.1123 Q1463.4257,113.914 1463.8896,113.4867 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1478.6458" y="115.7878">Application</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1448.4375" x2="1557.8125" y1="126.7578" y2="126.7578"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1448.4375" x2="1557.8125" y1="135.0911" y2="135.0911"/><!--MD5=[71ba3f8efe45f4767ee229c95530b131]
class Lexakai--><rect codeLine="33" fill="#282828" height="111.4563" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="1403.125" y="711.5153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="1403.125" y="711.5153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="200" x="1403.125" y="734.5703"/><rect codeLine="33" fill="none" height="111.4563" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="200" x="1403.125" y="711.5153"/><ellipse cx="1471.3542" cy="727.2095" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1473.2646,731.6345 Q1472.8373,731.8542 1472.3674,731.9641 Q1471.8974,732.074 1471.3786,732.074 Q1469.5353,732.074 1468.5649,730.8594 Q1467.5944,729.6448 1467.5944,727.3499 Q1467.5944,725.0488 1468.5649,723.8342 Q1469.5353,722.6196 1471.3786,722.6196 Q1471.8974,722.6196 1472.3735,722.7295 Q1472.8495,722.8394 1473.2646,723.0591 L1473.2646,725.061 Q1472.8007,724.6338 1472.3643,724.4354 Q1471.9279,724.2371 1471.464,724.2371 Q1470.4753,724.2371 1469.9717,725.0214 Q1469.4682,725.8057 1469.4682,727.3499 Q1469.4682,728.8879 1469.9717,729.6722 Q1470.4753,730.4565 1471.464,730.4565 Q1471.9279,730.4565 1472.3643,730.2582 Q1472.8007,730.0598 1473.2646,729.6326 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1494.2708" y="731.9336">Lexakai</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1404.1667" x2="1602.0833" y1="742.9036" y2="742.9036"/><polygon fill="#FFFF44" points="1414.5833,773.0652,1418.75,777.2319,1414.5833,781.3985,1410.4167,777.2319" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1426.0417" y="785.1847">Lexakai()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1404.1667" x2="1459.375" y1="761.1094" y2="761.1094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1462.5" y="764.919">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1546.875" x2="1602.0833" y1="761.1094" y2="761.1094"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1404.1667" x2="1602.0833" y1="794.8934" y2="794.8934"/><ellipse cx="1414.5833" cy="806.3517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1426.0417" y="813.2629">void main(String[] arguments)</text><!--MD5=[cd91c464fa9582b032e673759c376552]
class LexakaiClassDiagram--><rect codeLine="43" fill="#282828" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="306.25" y="1349.5361"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="306.25" y="1349.5361"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="306.25" y="1372.5911"/><rect codeLine="43" fill="none" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="306.25" y="1349.5361"/><ellipse cx="462.5" cy="1365.2303" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M464.4104,1369.6554 Q463.9832,1369.8751 463.5132,1369.9849 Q463.0432,1370.0948 462.5244,1370.0948 Q460.6812,1370.0948 459.7107,1368.8802 Q458.7402,1367.6656 458.7402,1365.3707 Q458.7402,1363.0697 459.7107,1361.8551 Q460.6812,1360.6405 462.5244,1360.6405 Q463.0432,1360.6405 463.5193,1360.7503 Q463.9954,1360.8602 464.4104,1361.0799 L464.4104,1363.0819 Q463.9465,1362.6546 463.5101,1362.4563 Q463.0737,1362.2579 462.6099,1362.2579 Q461.6211,1362.2579 461.1176,1363.0422 Q460.614,1363.8265 460.614,1365.3707 Q460.614,1366.9088 461.1176,1367.6931 Q461.6211,1368.4774 462.6099,1368.4774 Q463.0737,1368.4774 463.5101,1368.279 Q463.9465,1368.0806 464.4104,1367.6534 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="139.5833" x="485.4167" y="1369.9544">LexakaiClassDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="307.2917" x2="771.875" y1="1380.9245" y2="1380.9245"/><ellipse cx="317.7083" cy="1416.2944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="329.1667" y="1423.2056">LexakaiClassDiagram(LexakaiProject, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="495.8333" y1="1399.1302" y2="1399.1302"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="498.9583" y="1402.9399">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="583.3333" x2="771.875" y1="1399.1302" y2="1399.1302"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="771.875" y1="1432.9142" y2="1432.9142"/><ellipse cx="317.7083" cy="1444.3726" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="329.1667" y="1451.2838">boolean automaticMethodGroups()</text><ellipse cx="317.7083" cy="1464.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="329.1667" y="1471.0286">boolean has(UmlInheritance)</text><ellipse cx="317.7083" cy="1483.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="329.1667" y="1490.7735">LexakaiProject project()</text><ellipse cx="317.7083" cy="1503.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="329.1667" y="1510.5184">Set&lt;String&gt; qualifiedTypeNames()</text><ellipse cx="317.7083" cy="1523.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="329.1667" y="1530.2633">Referent referent(Type referent)</text><ellipse cx="317.7083" cy="1543.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="329.1667" y="1550.0081">String title()</text><ellipse cx="317.7083" cy="1586.7533" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="329.1667" y="1593.6646">boolean isPackageDiagram()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="513.0208" y1="1569.5892" y2="1569.5892"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="516.1458" y="1573.3988">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="566.1458" x2="771.875" y1="1569.5892" y2="1569.5892"/><ellipse cx="317.7083" cy="1630.4097" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="329.1667" y="1637.321">HashSet&lt;String&gt; abstractSuperClasses()</text><ellipse cx="317.7083" cy="1650.1546" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="329.1667" y="1657.0658">boolean add(UmlInheritance)</text><ellipse cx="317.7083" cy="1669.8995" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="329.1667" y="1676.8107">List&lt;MethodDeclaration&gt; includedMethods(TypeDeclaration&lt;?&gt;)</text><ellipse cx="317.7083" cy="1689.6444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="329.1667" y="1696.5556">List&lt;UmlType&gt; includedQualifiedTypes()</text><ellipse cx="317.7083" cy="1709.3892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="329.1667" y="1716.3005">boolean isEmpty()</text><ellipse cx="317.7083" cy="1729.1341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="329.1667" y="1736.0453">HashSet&lt;Object&gt; superInterfaces()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="505.2083" y1="1613.2456" y2="1613.2456"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="508.3333" y="1617.0553">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="573.9583" x2="771.875" y1="1613.2456" y2="1613.2456"/><ellipse cx="317.7083" cy="1772.7905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="329.1667" y="1779.7017">void include(UmlType)</text><ellipse cx="317.7083" cy="1792.5354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="329.1667" y="1799.4466">boolean includeMembers(TypeDeclaration&lt;?&gt;)</text><ellipse cx="317.7083" cy="1812.2803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="329.1667" y="1819.1915">boolean includeOverrides(TypeDeclaration&lt;?&gt;)</text><ellipse cx="317.7083" cy="1832.0251" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="434.375" x="329.1667" y="1838.9364">void includedMethods(TypeDeclaration&lt;?&gt;, Consumer&lt;MethodDeclaration&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="510.4167" y1="1755.6264" y2="1755.6264"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="513.5417" y="1759.436">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="568.75" x2="771.875" y1="1755.6264" y2="1755.6264"/><ellipse cx="317.7083" cy="1875.6816" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="329.1667" y="1882.5928">String identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="511.4583" y1="1858.5175" y2="1858.5175"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="514.5833" y="1862.3271">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="567.7083" x2="771.875" y1="1858.5175" y2="1858.5175"/><ellipse cx="317.7083" cy="1919.338" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="329.1667" y="1926.2492">boolean includesQualifiedTypeName(String typeName)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="307.2917" x2="511.4583" y1="1902.1739" y2="1902.1739"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="514.5833" y="1905.9835">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="567.7083" x2="771.875" y1="1902.1739" y2="1902.1739"/><!--MD5=[0a3ce8fd96b244d9fb97109c62f8cd04]
class LexakaiProject--><rect codeLine="77" fill="#282828" height="1037.4756" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="508.3333" x="275" y="248.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="508.3333" x="275" y="248.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="508.3333" x="275" y="271.5495"/><rect codeLine="77" fill="none" height="1037.4756" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="508.3333" x="275" y="248.4945"/><ellipse cx="475.5208" cy="264.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M477.4312,268.6137 Q477.004,268.8334 476.534,268.9433 Q476.064,269.0531 475.5452,269.0531 Q473.702,269.0531 472.7315,267.8385 Q471.7611,266.6239 471.7611,264.329 Q471.7611,262.028 472.7315,260.8134 Q473.702,259.5988 475.5452,259.5988 Q476.064,259.5988 476.5401,259.7087 Q477.0162,259.8185 477.4312,260.0382 L477.4312,262.0402 Q476.9674,261.613 476.531,261.4146 Q476.0946,261.2162 475.6307,261.2162 Q474.6419,261.2162 474.1384,262.0005 Q473.6348,262.7848 473.6348,264.329 Q473.6348,265.8671 474.1384,266.6514 Q474.6419,267.4357 475.6307,267.4357 Q476.0946,267.4357 476.531,267.2373 Q476.9674,267.039 477.4312,266.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="498.4375" y="268.9128">LexakaiProject</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="276.0417" x2="782.2917" y1="279.8828" y2="279.8828"/><ellipse cx="286.4583" cy="315.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="326.0417" x="297.9167" y="322.1639">LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="485.4167" y1="298.0886" y2="298.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="488.5417" y="301.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="572.9167" x2="782.2917" y1="298.0886" y2="298.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="782.2917" y1="331.8726" y2="331.8726"/><ellipse cx="286.4583" cy="343.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="297.9167" y="350.2421">boolean automaticMethodGroups()</text><ellipse cx="286.4583" cy="363.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="416.6667" x="297.9167" y="369.987">LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)</text><ellipse cx="286.4583" cy="382.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="297.9167" y="389.7319">void diagramNames(Consumer&lt;String&gt;)</text><ellipse cx="286.4583" cy="402.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="297.9167" y="409.4767">void diagrams(Consumer&lt;LexakaiClassDiagram&gt;)</text><ellipse cx="286.4583" cy="422.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="297.9167" y="429.2216">Pattern javadocSectionPattern()</text><ellipse cx="286.4583" cy="442.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="297.9167" y="448.9665">LexakaiProject javadocSectionPattern(Pattern)</text><ellipse cx="286.4583" cy="461.8001" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="297.9167" y="468.7113">String property(String key)</text><ellipse cx="286.4583" cy="481.545" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="297.9167" y="488.4562">void typeDeclarations(Consumer&lt;TypeDeclaration&lt;?&gt;&gt;)</text><ellipse cx="286.4583" cy="525.2014" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="364.5833" x="297.9167" y="532.1126">LexakaiProject buildPackageDiagrams(boolean packageDiagrams)</text><ellipse cx="286.4583" cy="544.9463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="297.9167" y="551.8575">boolean buildPackageDiagrams()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="498.9583" y1="508.0373" y2="508.0373"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="502.0833" y="511.8469">(building)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="559.375" x2="782.2917" y1="508.0373" y2="508.0373"/><ellipse cx="286.4583" cy="588.6027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="297.9167" y="595.5139">boolean hasChildProjects()</text><ellipse cx="286.4583" cy="608.3476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="297.9167" y="615.2588">boolean hasSourceCode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="502.6042" y1="571.4386" y2="571.4386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="505.7292" y="575.2482">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="555.7292" x2="782.2917" y1="571.4386" y2="571.4386"/><ellipse cx="286.4583" cy="652.004" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="297.9167" y="658.9152">boolean addHtmlAnchors()</text><ellipse cx="286.4583" cy="671.7489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="297.9167" y="678.6601">LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)</text><ellipse cx="286.4583" cy="691.4937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="476.0417" x="297.9167" y="698.4049">ObjectList&lt;LexakaiProject&gt; childProjects(HashMap&lt;Folder,LexakaiProject&gt; projects)</text><ellipse cx="286.4583" cy="711.2386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="297.9167" y="718.1498">ObjectList&lt;LexakaiProject&gt; childProjects()</text><ellipse cx="286.4583" cy="730.9835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="278.125" x="297.9167" y="737.8947">ObjectList&lt;JavadocCoverage&gt; javadocCoverage()</text><ellipse cx="286.4583" cy="750.7284" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="189.5833" x="297.9167" y="757.6396">VariableMap&lt;String&gt; properties()</text><ellipse cx="286.4583" cy="770.4732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="297.9167" y="777.3844">List&lt;TypeDeclaration&lt;?&gt;&gt; typeDeclarations()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="494.7917" y1="634.8399" y2="634.8399"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="497.9167" y="638.6495">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="563.5417" x2="782.2917" y1="634.8399" y2="634.8399"/><ellipse cx="286.4583" cy="814.1296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="128.125" x="297.9167" y="821.0409">Folder diagramFolder()</text><ellipse cx="286.4583" cy="833.8745" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="297.9167" y="840.7857">Folder documentationFolder()</text><ellipse cx="286.4583" cy="853.6194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="208.3333" x="297.9167" y="860.5306">Folder documentationLexakaiFolder()</text><ellipse cx="286.4583" cy="873.3643" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="80.2083" x="297.9167" y="880.2755">Folder folder()</text><ellipse cx="286.4583" cy="893.1091" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="297.9167" y="900.0203">Folder imagesFolder()</text><ellipse cx="286.4583" cy="912.854" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="179.1667" x="297.9167" y="919.7652">File parentReadMeTemplateFile()</text><ellipse cx="286.4583" cy="932.5989" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="297.9167" y="939.5101">File readMeTemplateFile()</text><ellipse cx="286.4583" cy="952.3438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="90.625" x="297.9167" y="959.255">File readmeFile()</text><ellipse cx="286.4583" cy="972.0886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="297.9167" y="978.9998">Folder relativeFolder()</text><ellipse cx="286.4583" cy="991.8335" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="297.9167" y="998.7447">Folder sourceFolder()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="493.75" y1="796.9655" y2="796.9655"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="496.875" y="800.7751">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="564.5833" x2="782.2917" y1="796.9655" y2="796.9655"/><ellipse cx="286.4583" cy="1035.4899" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="297.9167" y="1042.4011">LexakaiProject includeObjectMethods(boolean include)</text><ellipse cx="286.4583" cy="1055.2348" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="297.9167" y="1062.146">boolean includeObjectMethods()</text><ellipse cx="286.4583" cy="1074.9797" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="297.9167" y="1081.8909">LexakaiProject includeProtectedMethods(boolean include)</text><ellipse cx="286.4583" cy="1094.7245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="297.9167" y="1101.6357">boolean includeProtectedMethods()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="500" y1="1018.3258" y2="1018.3258"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="503.125" y="1022.1354">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="558.3333" x2="782.2917" y1="1018.3258" y2="1018.3258"/><ellipse cx="286.4583" cy="1138.3809" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="297.9167" y="1145.2922">Version version()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="501.0417" y1="1121.2168" y2="1121.2168"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="504.1667" y="1125.0264">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="557.2917" x2="782.2917" y1="1121.2168" y2="1121.2168"/><ellipse cx="286.4583" cy="1182.0374" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="297.9167" y="1188.9486">void initialize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="499.4792" y1="1164.8733" y2="1164.8733"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="502.6042" y="1168.6829">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="558.8542" x2="782.2917" y1="1164.8733" y2="1164.8733"/><ellipse cx="286.4583" cy="1225.6938" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="297.9167" y="1232.605">String name()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="501.0417" y1="1208.5297" y2="1208.5297"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="504.1667" y="1212.3393">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="557.2917" x2="782.2917" y1="1208.5297" y2="1208.5297"/><ellipse cx="286.4583" cy="1269.3502" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="297.9167" y="1276.2614">void updateReadMe()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="276.0417" x2="509.375" y1="1252.1861" y2="1252.1861"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="512.5" y="1255.9957">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="548.9583" x2="782.2917" y1="1252.1861" y2="1252.1861"/><!--MD5=[e90ef443e2de7449fab3197113b43b47]
class LexakaiClassDiagram.Referent--><rect codeLine="130" fill="#282828" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1595.3125" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1595.3125" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="1595.3125" y="76.7578"/><rect codeLine="130" fill="none" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="1595.3125" y="53.7028"/><ellipse cx="1609.8958" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1611.8062,73.822 Q1611.379,74.0417 1610.909,74.1516 Q1610.439,74.2615 1609.9202,74.2615 Q1608.077,74.2615 1607.1065,73.0469 Q1606.1361,71.8323 1606.1361,69.5374 Q1606.1361,67.2363 1607.1065,66.0217 Q1608.077,64.8071 1609.9202,64.8071 Q1610.439,64.8071 1610.9151,64.917 Q1611.3912,65.0269 1611.8062,65.2466 L1611.8062,67.2485 Q1611.3424,66.8213 1610.906,66.6229 Q1610.4696,66.4246 1610.0057,66.4246 Q1609.0169,66.4246 1608.5134,67.2089 Q1608.0098,67.9932 1608.0098,69.5374 Q1608.0098,71.0754 1608.5134,71.8597 Q1609.0169,72.644 1610.0057,72.644 Q1610.4696,72.644 1610.906,72.4457 Q1611.3424,72.2473 1611.8062,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="196.875" x="1626.5625" y="74.1211">LexakaiClassDiagram.Referent</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1596.3542" x2="1828.6458" y1="85.0911" y2="85.0911"/><ellipse cx="1606.7708" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="1618.2292" y="127.3722">Referent(String, Type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1596.3542" x2="1668.75" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1671.875" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1756.25" x2="1828.6458" y1="103.2969" y2="103.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1596.3542" x2="1828.6458" y1="137.0809" y2="137.0809"/><ellipse cx="1606.7708" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="1618.2292" y="155.4504">String cardinality()</text><ellipse cx="1606.7708" cy="168.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="1618.2292" y="175.1953">Type referent()</text><!--MD5=[d577b87d57838e1c1e0781a982567153]
reverse link BaseRepeater to BaseLexakaiDiagram--><path codeLine="12" d="M358,154.4215 C323.2917,176.859 281.7396,209.307 256.25,248.4945 C155.7188,403.057 131.5521,629.6715 125.7604,723.2965 " fill="none" id="BaseRepeater-backto-BaseLexakaiDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="354.375,148.0882,375.9167,143.307,362.0521,160.484,354.375,148.0882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[d0aa8f8bebcfc138e40d9396e552f097]
reverse link Comparable to LexakaiProject.JavadocCoverage--><path codeLine="20" d="M716.3958,122.0465 C812.1667,128.4215 972.3854,153.734 1065.625,248.4945 C1177.9375,362.6507 1205.2188,556.2028 1210.9896,671.5361 " fill="none" id="Comparable-backto-LexakaiProject.JavadocCoverage" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="715.9375,129.3278,695.5417,120.8903,716.75,114.7653,715.9375,129.3278" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1a1431ce37d8053f400fb8f8766fec82]
reverse link Application to Lexakai--><path codeLine="32" d="M1503.125,164.4528 C1503.125,278.984 1503.125,585.7445 1503.125,711.3903 " fill="none" id="Application-backto-Lexakai" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1495.8333,164.1924,1503.125,143.359,1510.4167,164.1924,1495.8333,164.1924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fa551b829565ba58f1de5fa1b0985ed4]
reverse link BaseLexakaiDiagram to LexakaiClassDiagram--><path codeLine="41" d="M131.4792,832.1507 C145.2396,932.9945 180.3438,1133.307 256.25,1285.9945 C270.6563,1314.984 287.7292,1343.807 306.2188,1371.7757 " fill="none" id="BaseLexakaiDiagram-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="124.2292,832.932,128.75,811.3278,138.6875,831.0465,124.2292,832.932" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[71641bad2aa654f1bc64e2946986b1b1]
reverse link Named to LexakaiClassDiagram--><path codeLine="42" d="M959.4167,812.432 C966.3333,905.2861 972.4271,1125.4528 894.7917,1285.9945 C865.1563,1347.2757 820.6042,1404.2445 772.9792,1453.8278 " fill="none" id="Named-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="952.1354,812.807,957.6667,791.4424,966.6667,811.5986,952.1354,812.807" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ee932fd7f1e0a70ce902c840e2ec0ec6]
reverse link BaseRepeater to LexakaiProject--><path codeLine="74" d="M426.2396,164.1924 C429.9792,186.0465 434.9271,214.9632 440.625,248.3174 " fill="none" id="BaseRepeater-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="419,165.1195,422.6771,143.359,433.375,162.6611,419,165.1195" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7833d3205852db5b5922448a307d98f4]
reverse link Comparable to LexakaiProject--><path codeLine="75" d="M630.1458,164.1924 C626.4792,186.0465 621.6354,214.9632 616.0417,248.3174 " fill="none" id="Comparable-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="623.0104,162.6924,633.6458,143.359,637.3854,165.109,623.0104,162.6924" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b04245787456317ee4873214d554c407]
link LexakaiProject to LexakaiProject--><path d="M1387.5,686.4007 C1409.6771,703.5049 1423.5521,730.4528 1423.5521,767.2445 C1423.5521,804.0361 1409.6771,830.984 1387.5,848.0882 " fill="none" id="LexakaiProject-to-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1423.5521,750.5778,1423.5521,760.837,1425.6674,755.3372,1431.1672,757.4525,1423.5521,750.5778" style="stroke:#545454;stroke-width:1.5625;"/><line style="stroke:#545454;stroke-width:1.5625;" x1="1425.6674" x2="1461.0521" y1="755.3372" y2="767.2445"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="56.25" x="1432.9271" y="772.0378">"creates"</text><!--MD5=[6a2cde627d505f1eb9ea304ec0978aa5]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Comparable <|- - LexakaiProject.JavadocCoverage
    class LexakaiProject.JavadocCoverage
    {
        - -(collection)- -
        +StringList description()
        +StringList significantUndocumentedClasses()
        - -(distance)- -
        +String meterMarkdown()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects(HashMap<Folder,LexakaiProject> projects)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> javadocCoverage()
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadMeTemplateFile()
        +File readMeTemplateFile()
        +File readmeFile()
        +Folder relativeFolder()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Comparable <|- - LexakaiProject.JavadocCoverage
    class LexakaiProject.JavadocCoverage
    {
        - -(collection)- -
        +StringList description()
        +StringList significantUndocumentedClasses()
        - -(distance)- -
        +String meterMarkdown()
        - -(math)- -
        +Percent percent()
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +void main(String[] arguments)
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects(HashMap<Folder,LexakaiProject> projects)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> javadocCoverage()
        +VariableMap<String> properties()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +Folder diagramFolder()
        +Folder documentationFolder()
        +Folder documentationLexakaiFolder()
        +Folder folder()
        +Folder imagesFolder()
        +File parentReadMeTemplateFile()
        +File readMeTemplateFile()
        +File readmeFile()
        +Folder relativeFolder()
        +Folder sourceFolder()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(naming)- -
        +String name()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>